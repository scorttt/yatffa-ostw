import "../main.del";

playervar Number anaSleepsFired!;
playervar Number anaSleepsHit!;
playervar Boolean anaSleepInAir!;
void AnaUpdateAcc() playervar "Ana : Update Accuracy"
{
    heroStatVal[1] = Near((anaSleepsHit / anaSleepsFired) * 100);
}
rule: "Ana : Sleep Fired"
Event.OngoingPlayer
Player.Ana
if (IsAbility1Held())
if (AbilityCooldown(player, Button.Ability1) == 0)
if (IsUsingAbility1())
if (!playerCCed)
{
    Wait(0.304); // time for projectile to spawn

    Number prevHitAmnt! = anaSleepsHit;
    anaSleepInAir = true;
    anaSleepsFired++;

    WaitUntil(!anaSleepInAir || prevHitAmnt < anaSleepsHit, 2);
    anaSleepInAir = false;

    AnaUpdateAcc();
}

rule: "Ana : Sleeps Hit"
Event.OnDamageDealt
Player.Ana
if (EventAbility() == Button.Ability1)
{
    anaSleepsHit++;
    anaSleepInAir = false;

    heroStatVal[0] = anaSleepsHit;

    AnaUpdateAcc();
}